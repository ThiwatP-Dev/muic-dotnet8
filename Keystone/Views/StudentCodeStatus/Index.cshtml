@model PagedResult<StudentCodeStatusViewModel>
@{ 
    ViewData["Title"] = "Student Code Status";
}

<section class="row">
    <div class="col-12">
        <div class="block block--underline">
            <div class="block__title">
                <header>Search Student Code Status</header>
            </div>

            <div class="block__body">
                <form class="form-horizontal" asp-controller="StudentCodeStatus" asp-action="Index" method="GET">
                    @Html.AntiForgeryToken()
                    <div class="row form-group m-b-30">
                        <div class="col-4">
                            <select class="chosen-select form-control js-cascade-academic-level" asp-for="Criteria.AcademicLevelId" asp-items="ViewBag.AcademicLevels" data-placeholder="Select">
                                <option selected disabled>Select</option>
                            </select>
                            <label>Academic Level<span class="text-danger">*</span></label>
                        </div>
                        <div class="col-4">
                            <select class="chosen-select form-control js-cascade-admission-round" asp-for="Criteria.AdmissionRoundId" asp-items="ViewBag.AdmissionRounds" data-placeholder="Select">
                                <option selected>Select</option>
                            </select>
                            <label>Admission Round</label>
                        </div>
                        <div class="col-4">
                            <select class="chosen-select form-control" asp-for="Criteria.Status" asp-items="ViewBag.StudentCodeStatuses" data-placeholder="All"></select>
                            <label>Status</label>
                        </div>
                    </div>

                    <div class="row form-group mb-0">
                        <div class="col-4">
                            <input class="form-control js-cascade-started-code" asp-for="Criteria.StudentCodeFrom" type="text">
                            <label>Student Code From<span class="text-danger">*</span></label>
                        </div>
                        <div class="col-4">
                            <input class="form-control js-cascade-ended-code" asp-for="Criteria.StudentCodeTo" type="text">
                            <label>To<span class="text-danger">*</span></label>
                        </div>
                        <div class="col-4 align-self-end text-right">
                            <button class="btn btn-mw-120 btn--primary m-r-5 mb-0" type="submit">
                                <i class="la la-search mr-2"></i>Search
                            </button>
                            <button class="btn btn-mw-120 btn--reset js-reset-btn mb-0" type="reset">
                                Reset
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<section class="row">
    <div class="col-12">
        <div class="block block--underline">
            <div class="block__title">
                <header>Search Result (@(Model?.RowCount ?? 0))</header>
            </div>

            <div class="block__body">
                <div class="table-responsive">
                    <table class="table table-bordered table-hover w-100x">
                        <thead>
                            <tr>
                                <th class="text-center">Code</th>
                                <th class="text-center">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Results.Any())
                            {
                                foreach (var item in Model.Results) 
                                {
                                    <tr>
                                        <td>@item.Code</td>
                                        <td>
                                            @if (item.IsUsed)
                                            {
                                                <span class="text-success">Used</span>
                                            }
                                            else
                                            {
                                                <span class="text-danger">Not Used</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="8">
                                        <i class="text-danger">No Data</i>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            @(await Component.InvokeAsync<PagerViewComponent>(Model))
        </div>
    </div>
</section>

@section Modals {
    <partial name="_DeleteConfirmModals">
}