@model RegistrationResultWithAmountAndCreditReportViewModel
@{
    ViewData["Title"] = "Fee Report by Student Batch Detail";
    var contextPath =  $"{ Context.Request.Path }{ Context.Request.QueryString }";
    List<KeyValuePair<string, List<long>>> feeColumn = new List<KeyValuePair<string, List<long>>>()
    {
        //From FeeItem
        new KeyValuePair<string, List<long>> ("Tuition" , new List<long>{1, 25}),
        new KeyValuePair<string, List<long>> ("Education Fee" , new List<long>{13}),
        new KeyValuePair<string, List<long>> ("Insurance Fee" , new List<long>{15}),
        new KeyValuePair<string, List<long>> ("Trimester Lump Sum Tution Fees" , new List<long>{7,9,10,11,33}),
        new KeyValuePair<string, List<long>> ("Add/Drop Fee" , new List<long>{21}),
        new KeyValuePair<string, List<long>> ("Late Registration Fee" , new List<long>{24}),
        new KeyValuePair<string, List<long>> ("Late Payment Fee" , new List<long>{17}),
        new KeyValuePair<string, List<long>> ("Scholarship" , new List<long>{ KeystoneLibrary.Providers.ReceiptProvider.SPECIAL_FEE_TYPE_ID_SCHOLARSHIP}),
    };
}

<section class="d-print-none">
    <div class="block block--underline">
        <div class="block__title">
            <header>@ViewData["Title"]</header>
        </div>
        <form class="form-horizontal" asp-controller="FeeReport" asp-action="PivotByStudentBatchDetail" method="GET">
            @Html.AntiForgeryToken()
            <div class="block__body">
                <div class="row form-group m-b-30">
                    <div class="col-3">
                        <select class="chosen-select form-control js-cascade-academic-level" asp-for="Criteria.AcademicLevelId" asp-items="ViewBag.AcademicLevels" data-placeholder="Select">
                            <option selected disabled>Select</option>
                        </select>
                        <label>Academic Level<span class="text-danger">*</span></label>
                    </div>
                    <div class="col-3">
                        <select class="chosen-select form-control js-cascade-term" asp-for="Criteria.TermId" asp-items="ViewBag.Terms" data-placeholder="Select">
                            <option selected disabled>Select</option>
                        </select>
                        <label>Term<span class="text-danger">*</span></label>
                    </div>
                    <div class="col-3">
                        <select class="chosen-select form-control js-cascade-faculty" asp-for="Criteria.FacultyId" asp-items="ViewBag.Faculties" data-placeholder="Select">
                            <option selected value="">Select</option>
                        </select>
                        <label>Division</label>
                    </div>
                    <div class="col-3">
                        <select class="chosen-select form-control js-cascade-department" asp-for="Criteria.DepartmentId" asp-items="ViewBag.Departments" data-placeholder="Select">
                            <option selected value="">Select</option>
                        </select>
                        <label>Major</label>
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-3">
                        <select class="chosen-select form-control" asp-for="Criteria.InvoiceType" asp-items="ViewBag.InvoiceType">
                            <option value="unconfirm">Unconfirmed</option>
                        </select>
                        <label>Type</label>
                    </div>
                    <div class="col-3">
                        <select class="chosen-select form-control" asp-for="Criteria.IsPaidAdmissionFee" asp-items="ViewBag.PaidStatuses"></select>
                        <label>Paid Status</label>
                    </div>
                    <div class="col-3">
                    </div>
                    <div class="col-3 align-self-end text-right text-nowrap">
                        <button class="btn btn--primary btn-mw-120 m-r-5 mb-0" type="submit">
                            <i class="la la-search mr-2"></i>Preview
                        </button>
                        <button class="btn btn-mw-120 btn--reset js-reset-btn mb-0" type="reset">
                            Resets
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>

<section class="row">
    <div class="col-12">
        <form class="form-horizontal js-pivot-form" asp-controller="FeeReport" asp-action="ExportExcel" method="POST">
            <div class="block block--underline">
                <div class="block__title d-print-none">
                    <header>Search Result (@(Model?.Batches?.Count ?? 0))</header>
                    <header class="float-right">
                        <input name="page" value="bd" type="hidden">
                        <input name="returnUrl" value="@contextPath" type="hidden">
                        <button class="btn btn--primary mb-0" type="submit">Export Excel</button>
                    </header>
                </div>
                <div class="block__body">
                    @if (Model != null)
                    {
                        <div class="row">
                            <div class="col-12 m-t-0">
                                <header>
                                    <h4 class="text-center"><b>@ViewData["Title"]</b></h4>
                                </header>

                                <div class="block__body">
                                    <div class="table-responsive">
                                        <table id="js-pivot-by-student-batch" class="table table-bordered table-hover w-100x">
                                            <thead>
                                                <tr>
                                                    <th>Division</th>
                                                    <th>Major</th>
                                                    <th class="text-right">Student Count</th>
                                                    @if (feeColumn != null && feeColumn.Any())
                                                    {
                                                        for (int i = 0; i < feeColumn.Count; i++)
                                                        {
                                                            <th>@feeColumn[i].Key</th>
                                                            <input name="Fees[@i].FeeName" value="@feeColumn[i].Key" hidden>
                                                        }
                                                    }
                                                    <th>Others</th>
                                                    <th>Total Amount</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model != null && Model.Batches != null && Model.ReportItems != null)
                                                {
                                                    @for (int i = 0; i < Model.Batches.Count; i++)
                                                    {
                                                        var totalFaculty = 0;
                                                        <tr>
                                                            <td colspan="@(feeColumn.Count + 5)" class="font-weight-700 font-size-13">Batch : @Model.Batches[i].StudentBatch</td>
                                                        </tr>
                                                        @for (int l = 0; l < Model.Batches[i].Faculties.Count; l++)
                                                        {
                                                            @for (int j = 0; j < Model.Batches[i].Faculties[l].ReportItems.Count; j++)
                                                            {
                                                                var otherAmount = (Model.Batches[i].Faculties[l].ReportItems[j].Items.Where(x => !feeColumn.SelectMany(y => y.Value).Contains(x.FeeItemId)).Sum(x => x.Amount)
                                                                                   - Model.Batches[i].Faculties[l].ReportItems[j].Items.Sum(x => x.DiscountAmount)).ToString(StringFormat.Money);
                                                                <tr>
                                                                    <td>@Model.Batches[i].Faculties[l].ReportItems[j].Faculty</td>
                                                                    <td>@Model.Batches[i].Faculties[l].ReportItems[j].Department</td>
                                                                    <td>@Model.Batches[i].Faculties[l].ReportItems[j].StudentCount</td>
                                                                    @for (int k = 0; k < feeColumn.Count; k++)
                                                                    {
                                                                        var amount = Model.Batches[i].Faculties[l].ReportItems[j].Items.Where(x => feeColumn[k].Value.Contains(x.FeeItemId)).Sum(x => x.Amount).ToString(StringFormat.Money);
                                                                        <td class="text-right">@amount</td>
                                                                        <input name="Batches[@i].Faculties[@l].ReportItems[@j].Items[@k].Amount" value="@amount" hidden>
                                                                    }
                                                                    <td class="text-right">@otherAmount</td>
                                                                    <td class="text-right">@Model.Batches[i].Faculties[l].ReportItems[j].TotalAmount.ToString(StringFormat.Money)</td>

                                                                    <input asp-for="Batches[i].Faculties[l].ReportItems[j].Faculty" hidden>
                                                                    <input asp-for="Batches[i].Faculties[l].ReportItems[j].Department" hidden>
                                                                    <input name="Batches[@i].Faculties[@l].ReportItems[@j].StudentCount" value="@Model.Batches[i].Faculties[l].ReportItems[j].StudentCount" hidden>
                                                                    <input name="Batches[@i].Faculties[@l].ReportItems[@j].TotalAmount" value="@Model.Batches[i].Faculties[l].ReportItems[j].TotalAmount" hidden>
                                                                    <input name="Batches[@i].Faculties[@l].ReportItems[@j].OtherTotalAmount" value="@otherAmount" hidden>

                                                                    <input asp-for="Batches[i].ReportItems[j].Faculty" hidden>
                                                                    <input asp-for="Batches[i].ReportItems[j].Department" hidden>
                                                                    <input name="Batches[@i].ReportItems[@j].StudentCount" value="@Model.Batches[i].ReportItems[j].StudentCount" hidden>
                                                                    <input name="Batches[@i].ReportItems[@j].TotalAmount" value="@Model.Batches[i].ReportItems[j].TotalAmount" hidden>
                                                                    <input name="Batches[@i].ReportItems[@j].OtherTotalAmount" value="@otherAmount" hidden>
                                                                </tr>
                                                                totalFaculty++;
                                                            }
                                                            decimal totalOtherAmountFaculty = (Model.Batches[i].Faculties[l].ReportItems.SelectMany(x => x.Items).Where(x => !feeColumn.SelectMany(y => y.Value).Contains(x.FeeItemId)).Sum(x => x.Amount)
                                                                                        - Model.Batches[i].Faculties[l].ReportItems.SelectMany(x => x.Items).Sum(x => x.DiscountAmount));
                                                            decimal totalAmountFaculty = Model.Batches[i].Faculties[l].ReportItems.Sum(x => x.TotalAmount);
                                                            int studentCountFaculty = Model.Batches[i].Faculties[l].ReportItems.Sum(x => x.StudentCount);

                                                            <tr>
                                                                <td colspan="2" class="font-weight-bold font-size-12">@($"Total : { Model.Batches[i].Faculties[l].Faculty } / { Model.Batches[i].StudentBatch }")</td>
                                                                <td class="font-weight-bold text-right font-size-12">@studentCountFaculty</td>
                                                                @for (int j = 0; j < feeColumn.Count; j++)
                                                                {
                                                                    decimal totalFeeAmount = 0;
                                                                    totalFeeAmount = Model.Batches[i].Faculties[l].ReportItems.SelectMany(x => x.Items).Where(x => feeColumn[j].Value.Contains(x.FeeItemId)).Sum(x => x.Amount);

                                                                    <td class="text-right font-weight-bold font-size-12">@totalFeeAmount.ToString(StringFormat.Money)</td>
                                                                    <input name="Batches[@i].Faculties[@l].Fees[@j].Amount" value="@totalFeeAmount" hidden>
                                                                }

                                                                <td class="text-right font-weight-bold font-size-12">@totalOtherAmountFaculty.ToString(StringFormat.Money)</td>
                                                                <td class="text-right font-weight-bold font-size-12">@totalAmountFaculty.ToString(StringFormat.Money)</td>
                                                            </tr>

                                                            <input asp-for="Batches[i].Faculties[l].Faculty" hidden>
                                                            <input name="Batches[@i].Faculties[@l].StudentCount" value="@studentCountFaculty" hidden>
                                                            <input name="Batches[@i].Faculties[@l].OtherTotalAmount" value="@totalOtherAmountFaculty" hidden>
                                                            <input name="Batches[@i].Faculties[@l].TotalAmount" value="@totalAmountFaculty" hidden>
                                                        }

                                                        decimal totalOtherAmount = (Model.Batches[i].ReportItems.SelectMany(x => x.Items).Where(x => !feeColumn.SelectMany(y => y.Value).Contains(x.FeeItemId)).Sum(x => x.Amount)
                                                                                    - Model.Batches[i].ReportItems.SelectMany(x => x.Items).Sum(x => x.DiscountAmount));
                                                        decimal totalAmount = Model.Batches[i].ReportItems.Sum(x => x.TotalAmount);
                                                        int studentCount = Model.Batches[i].ReportItems.Sum(x => x.StudentCount);

                                                        <tr>
                                                            <td colspan="2" class="font-weight-bold font-size-13">Total Batch : @Model.Batches[i].StudentBatch</td>
                                                            <td class="font-weight-bold text-right font-size-13">@studentCount</td>
                                                            @for (int j = 0; j < feeColumn.Count; j++)
                                                            {
                                                                decimal totalFeeAmount = 0;
                                                                totalFeeAmount = Model.Batches[i].ReportItems.SelectMany(x => x.Items).Where(x => feeColumn[j].Value.Contains(x.FeeItemId)).Sum(x => x.Amount);
                                                                
                                                                <td class="text-right font-weight-bold font-size-13">@totalFeeAmount.ToString(StringFormat.Money)</td>
                                                                <input name="Batches[@i].Fees[@j].Amount" value="@totalFeeAmount" hidden>
                                                            }

                                                            <td class="text-right font-weight-bold font-size-13">@totalOtherAmount.ToString(StringFormat.Money)</td>
                                                            <td class="text-right font-weight-bold font-size-13">@totalAmount.ToString(StringFormat.Money)</td>
                                                        </tr>

                                                        <input asp-for="Batches[i].StudentBatch" hidden>
                                                        <input name="Batches[@i].StudentCount" value="@studentCount" hidden>
                                                        <input name="Batches[@i].OtherTotalAmount" value="@totalOtherAmount" hidden>
                                                        <input name="Batches[@i].TotalAmount" value="@totalAmount" hidden>
                                                    }

                                                    <tr>
                                                        <td colspan="@(feeColumn.Count + 5)" class="font-weight-600"><br></td>
                                                    </tr>
                                                    <tr>
                                                        <td colspan="@(feeColumn.Count + 5)" class="font-weight-600">Batch : All</td>
                                                    </tr>
                                                    @for (int k = 0; k < Model.Faculties.Count; k++)
                                                    {
                                                        @for (int i = 0; i < Model.Faculties[k].ReportItems.Count; i++)
                                                        {
                                                            var otherAmount = (Model.Faculties[k].ReportItems[i].Items.Where(x => !feeColumn.SelectMany(y => y.Value).Contains(x.FeeItemId)).Sum(x => x.Amount)
                                                                               - Model.Faculties[k].ReportItems[i].Items.Sum(x => x.DiscountAmount)).ToString(StringFormat.Money);
                                                            <tr>
                                                                <td>@Model.Faculties[k].ReportItems[i].Faculty</td>
                                                                <td>@Model.Faculties[k].ReportItems[i].Department</td>
                                                                <td>@Model.Faculties[k].ReportItems[i].StudentCount</td>
                                                                @for (int j = 0; j < feeColumn.Count; j++)
                                                                {
                                                                    var amount = Model.Faculties[k].ReportItems[i].Items.Where(x => feeColumn[j].Value.Contains(x.FeeItemId)).Sum(x => x.Amount).ToString(StringFormat.Money);
                                                                    <td class="text-right">@amount</td>
                                                                    <input name="Faculties[@k].ReportItems[@i].Items[@j].Amount" value="@amount" hidden>
                                                                }
                                                                <td class="text-right">@otherAmount</td>
                                                                <td class="text-right">@Model.Faculties[k].ReportItems[i].TotalAmount.ToString(StringFormat.Money)</td>

                                                                <input asp-for="Faculties[k].ReportItems[i].Faculty" hidden>
                                                                <input asp-for="Faculties[k].ReportItems[i].Department" hidden>
                                                                <input asp-for="Faculties[k].ReportItems[i].StudentCount" hidden>
                                                                <input name="Faculties[@k].ReportItems[@i].TotalAmount" value="@Model.Faculties[k].ReportItems[i].TotalAmount" hidden>
                                                                <input name="Faculties[@k].ReportItems[@i].OtherTotalAmount" value="@otherAmount" hidden>
                                                            </tr>
                                                        }
                                                            decimal totalOtherAmountFaculty = (Model.Faculties[k].ReportItems.SelectMany(x => x.Items).Where(x => !feeColumn.SelectMany(y => y.Value).Contains(x.FeeItemId)).Sum(x => x.Amount)
                                                                                        - Model.Faculties[k].ReportItems.SelectMany(x => x.Items).Sum(x => x.DiscountAmount));
                                                            decimal totalAmountFaculty = Model.Faculties[k].ReportItems.Sum(x => x.TotalAmount);
                                                            int studentCountFaculty = Model.Faculties[k].ReportItems.Sum(x => x.StudentCount);

                                                            <tr>
                                                                <td colspan="2" class="font-weight-bold font-size-12">Total Faculty : @Model.Faculties[k].Faculty</td>
                                                                <td class="font-weight-bold text-right font-size-12">@studentCountFaculty</td>
                                                                @for (int j = 0; j < feeColumn.Count; j++)
                                                                {
                                                                    decimal totalFeeAmount = 0;
                                                                    totalFeeAmount = Model.Faculties[k].ReportItems.SelectMany(x => x.Items).Where(x => feeColumn[j].Value.Contains(x.FeeItemId)).Sum(x => x.Amount);

                                                                    <td class="text-right font-weight-bold font-size-12">@totalFeeAmount.ToString(StringFormat.Money)</td>
                                                                    <input name="Faculties[@k].Fees[@j].Amount" value="@totalFeeAmount" hidden>
                                                                }

                                                                <td class="text-right font-weight-bold font-size-12">@totalOtherAmountFaculty.ToString(StringFormat.Money)</td>
                                                                <td class="text-right font-weight-bold font-size-12">@totalAmountFaculty.ToString(StringFormat.Money)</td>
                                                            </tr>

                                                            <input asp-for="Faculties[k].Faculty" hidden>
                                                            <input name="Faculties[@k].StudentCount" value="@studentCountFaculty" hidden>
                                                            <input name="Faculties[@k].OtherTotalAmount" value="@totalOtherAmountFaculty" hidden>
                                                            <input name="Faculties[@k].TotalAmount" value="@totalAmountFaculty" hidden>
                                                    }
                                                }
                                            </tbody>
                                            @if (Model != null && Model.Batches != null && Model.ReportItems != null)
                                            {
                                                decimal totalAmount = 0;
                                                decimal totalOtherAmount = 0;
                                                int studentCount = 0;
                                                for (var i = 0; i < Model.Batches.Count; i++)
                                                {
                                                    totalOtherAmount += (Model.Batches[i].ReportItems.SelectMany(x => x.Items).Where(x => !feeColumn.SelectMany(y => y.Value).Contains(x.FeeItemId)).Sum(x => x.Amount)
                                                                         - Model.Batches[i].ReportItems.SelectMany(x => x.Items).Sum(x => x.DiscountAmount));
                                                    totalAmount += Model.Batches[i].ReportItems.Sum(x => x.TotalAmount);
                                                    studentCount += Model.Batches[i].ReportItems.Sum(x => x.StudentCount);
                                                }
                                                <tfoot>
                                                    <tr>
                                                        <td colspan="2" class="font-weight-bold">All Total</td>
                                                        <td class="font-weight-bold text-right">@studentCount</td>
                                                        @for (int i = 0; i < feeColumn.Count; i++)
                                                        {
                                                            decimal totalFeeAmount = 0;
                                                            for (var j = 0; j < Model.Batches.Count; j++)
                                                            {
                                                                totalFeeAmount += Model.Batches[j].ReportItems.SelectMany(x => x.Items).Where(x => feeColumn[i].Value.Contains(x.FeeItemId)).Sum(x => x.Amount);
                                                            }
                                                            
                                                            <td class="text-right font-weight-bold">@totalFeeAmount.ToString(StringFormat.Money)</td>
                                                            <input name="Fees[@i].Amount" value="@totalFeeAmount" hidden>
                                                        }

                                                        <td class="text-right font-weight-bold">@totalOtherAmount.ToString(StringFormat.Money)</td>
                                                        <td class="text-right font-weight-bold">@totalAmount.ToString(StringFormat.Money)</td>

                                                        <input name="OtherTotalAmount" value="@totalOtherAmount" hidden>
                                                        <input name="TotalAmount" value="@totalAmount" hidden>
                                                        <input name="StudentCount" value="@studentCount" hidden>
                                                    </tr>
                                                </tfoot>
                                            }
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <span class="page-break"></span>
                        <hr class="my-3" />
                    }
                    else
                    {
                        <div class="d-block text-center">
                            <i class="text-danger">No Data</i>
                        </div>
                    }
                </div>
            </div>
        </form>
    </div>
</section>

@section Scripts {
    <script type="text/javascript" src="~/js/pages/pivot-by-batch.js"></script>
}